cmake_minimum_required(VERSION 3.5)
project(ros2_cpp_pkg)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(tutorial_interfaces REQUIRED)   

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()


add_executable(cpp_code src/ros2_cpp_code.cpp)
ament_target_dependencies(cpp_code rclcpp)

add_executable(talker src/publisher.cpp)
ament_target_dependencies(talker rclcpp std_msgs tutorial_interfaces)

add_executable(listener src/subscriber.cpp)
ament_target_dependencies(listener rclcpp std_msgs tutorial_interfaces)

add_executable(client src/client.cpp)
ament_target_dependencies(client rclcpp std_msgs tutorial_interfaces)

add_executable(server src/server.cpp)
ament_target_dependencies(server rclcpp std_msgs tutorial_interfaces)

# install the launch directory
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

install(TARGETS
    cpp_code
    talker
    listener
    client
    server
    DESTINATION lib/${PROJECT_NAME}
)
ament_package()



